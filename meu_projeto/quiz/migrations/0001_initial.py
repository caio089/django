# Generated by Django 5.2.5 on 2025-09-25 18:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaQuiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome da categoria')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('cor', models.CharField(default='#007bff', max_length=7, verbose_name='Cor (hex)')),
                ('icone', models.CharField(default='fas fa-question-circle', max_length=50, verbose_name='Ícone (Font Awesome)')),
                ('ordem', models.PositiveIntegerField(default=0, verbose_name='Ordem de exibição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Categoria ativa')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Categoria do Quiz',
                'verbose_name_plural': 'Categorias do Quiz',
                'ordering': ['ordem', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Conquista',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome da conquista')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('icone', models.CharField(default='fas fa-trophy', max_length=50, verbose_name='Ícone')),
                ('cor', models.CharField(default='#FFD700', max_length=7, verbose_name='Cor')),
                ('tipo', models.CharField(choices=[('acertos', 'Acertos'), ('sequencia', 'Sequência'), ('tempo', 'Tempo'), ('quiz_completos', 'Quiz Completos'), ('categoria', 'Categoria'), ('especial', 'Especial')], max_length=20, verbose_name='Tipo de conquista')),
                ('requisito_valor', models.PositiveIntegerField(verbose_name='Valor do requisito')),
                ('requisito_extra', models.JSONField(blank=True, default=dict, verbose_name='Requisitos extras')),
                ('pontos_experiencia', models.PositiveIntegerField(default=0, verbose_name='Pontos de experiência')),
                ('bonus_pontuacao', models.PositiveIntegerField(default=0, verbose_name='Bônus de pontuação')),
                ('ativa', models.BooleanField(default=True, verbose_name='Conquista ativa')),
                ('rara', models.BooleanField(default=False, verbose_name='Conquista rara')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Conquista',
                'verbose_name_plural': 'Conquistas',
            },
        ),
        migrations.CreateModel(
            name='Pergunta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pergunta', models.TextField(verbose_name='Texto da pergunta')),
                ('nivel_dificuldade', models.CharField(choices=[('facil', 'Fácil'), ('medio', 'Médio'), ('dificil', 'Difícil')], default='medio', max_length=10, verbose_name='Nível de dificuldade')),
                ('pontos', models.PositiveIntegerField(default=10, verbose_name='Pontos por resposta correta')),
                ('tempo_limite_segundos', models.PositiveIntegerField(default=30, verbose_name='Tempo limite (segundos)')),
                ('explicacao', models.TextField(blank=True, null=True, verbose_name='Explicação da resposta')),
                ('ativa', models.BooleanField(default=True, verbose_name='Pergunta ativa')),
                ('ordem', models.PositiveIntegerField(default=0, verbose_name='Ordem')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='perguntas', to='quiz.categoriaquiz')),
            ],
            options={
                'verbose_name': 'Pergunta',
                'verbose_name_plural': 'Perguntas',
                'ordering': ['categoria', 'ordem'],
            },
        ),
        migrations.CreateModel(
            name='Alternativa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.TextField(verbose_name='Texto da alternativa')),
                ('correta', models.BooleanField(default=False, verbose_name='Alternativa correta')),
                ('ordem', models.PositiveIntegerField(default=0, verbose_name='Ordem da alternativa')),
                ('pergunta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alternativas', to='quiz.pergunta')),
            ],
            options={
                'verbose_name': 'Alternativa',
                'verbose_name_plural': 'Alternativas',
                'ordering': ['pergunta', 'ordem'],
            },
        ),
        migrations.CreateModel(
            name='ProgressoUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_quiz_realizados', models.PositiveIntegerField(default=0, verbose_name='Total de quiz realizados')),
                ('total_perguntas_respondidas', models.PositiveIntegerField(default=0, verbose_name='Total de perguntas respondidas')),
                ('total_acertos', models.PositiveIntegerField(default=0, verbose_name='Total de acertos')),
                ('total_erros', models.PositiveIntegerField(default=0, verbose_name='Total de erros')),
                ('pontuacao_total', models.PositiveIntegerField(default=0, verbose_name='Pontuação total acumulada')),
                ('experiencia_total', models.PositiveIntegerField(default=0, verbose_name='Experiência total')),
                ('sequencia_acertos', models.PositiveIntegerField(default=0, verbose_name='Sequência atual de acertos')),
                ('melhor_sequencia_acertos', models.PositiveIntegerField(default=0, verbose_name='Melhor sequência de acertos')),
                ('tempo_total_quiz_segundos', models.PositiveIntegerField(default=0, verbose_name='Tempo total em quiz (segundos)')),
                ('conquistas_desbloqueadas', models.JSONField(default=list, verbose_name='Conquistas desbloqueadas')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='progresso', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Progresso do Usuário',
                'verbose_name_plural': 'Progressos dos Usuários',
            },
        ),
        migrations.CreateModel(
            name='SessaoQuiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('iniciada', 'Iniciada'), ('em_andamento', 'Em Andamento'), ('concluida', 'Concluída'), ('abandonada', 'Abandonada')], default='iniciada', max_length=20)),
                ('total_perguntas', models.PositiveIntegerField(default=10, verbose_name='Total de perguntas')),
                ('perguntas_respondidas', models.PositiveIntegerField(default=0, verbose_name='Perguntas respondidas')),
                ('pontuacao_total', models.PositiveIntegerField(default=0, verbose_name='Pontuação total')),
                ('acertos', models.PositiveIntegerField(default=0, verbose_name='Número de acertos')),
                ('erros', models.PositiveIntegerField(default=0, verbose_name='Número de erros')),
                ('tempo_inicio', models.DateTimeField(auto_now_add=True, verbose_name='Tempo de início')),
                ('tempo_fim', models.DateTimeField(blank=True, null=True, verbose_name='Tempo de fim')),
                ('tempo_total_segundos', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tempo total (segundos)')),
                ('experiencia_ganha', models.PositiveIntegerField(default=0, verbose_name='Experiência ganha')),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='quiz.categoriaquiz')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessoes_quiz', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sessão de Quiz',
                'verbose_name_plural': 'Sessões de Quiz',
                'ordering': ['-tempo_inicio'],
            },
        ),
        migrations.CreateModel(
            name='RespostaUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correta', models.BooleanField(verbose_name='Resposta correta')),
                ('pontos_ganhos', models.PositiveIntegerField(default=0, verbose_name='Pontos ganhos')),
                ('tempo_resposta_segundos', models.PositiveIntegerField(verbose_name='Tempo de resposta (segundos)')),
                ('data_resposta', models.DateTimeField(auto_now_add=True, verbose_name='Data da resposta')),
                ('alternativa_escolhida', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.alternativa')),
                ('pergunta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.pergunta')),
                ('sessao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respostas', to='quiz.sessaoquiz')),
            ],
            options={
                'verbose_name': 'Resposta do Usuário',
                'verbose_name_plural': 'Respostas dos Usuários',
                'ordering': ['-data_resposta'],
            },
        ),
    ]
