#!/usr/bin/env bash
# exit on error
set -o errexit

# Instalar depend√™ncias
pip install -r requirements.txt

# Executar migra√ß√µes de forma segura
echo "üîÑ Aplicando migra√ß√µes..."
# Temporariamente desabilitar errexit para tentar migrate
set +e
python manage.py migrate --fake-initial
MIGRATE_EXIT_CODE=$?
set -e

# Se falhou, tenta com --fake
if [ $MIGRATE_EXIT_CODE -ne 0 ]; then
    echo "‚ö†Ô∏è  Migrate falhou (c√≥digo $MIGRATE_EXIT_CODE), marcando migrations como aplicadas..."
    python manage.py migrate --fake
fi

# Coletar arquivos est√°ticos de forma segura
echo "üìÅ Coletando arquivos est√°ticos..."
set +e
python manage.py collectstatic --noinput
COLLECTSTATIC_EXIT_CODE=$?
set -e

if [ $COLLECTSTATIC_EXIT_CODE -ne 0 ]; then
    echo "‚ö†Ô∏è  Collectstatic falhou (c√≥digo $COLLECTSTATIC_EXIT_CODE), continuando sem arquivos est√°ticos..."
    echo "   Os arquivos est√°ticos ser√£o servidos diretamente do c√≥digo"
else
    echo "‚úÖ Arquivos est√°ticos coletados com sucesso"
fi

# Executar script de configura√ß√£o inicial (apenas se necess√°rio)
echo "üöÄ Executando configura√ß√£o inicial..."
set +e
python setup_render.py
SETUP_EXIT_CODE=$?
set -e

if [ $SETUP_EXIT_CODE -ne 0 ]; then
    echo "‚ö†Ô∏è  Setup inicial falhou, mas continuando..."
else
    echo "‚úÖ Configura√ß√£o inicial conclu√≠da"
fi

echo "üéâ Build conclu√≠do!"





