# Generated by Django 5.2.5 on 2025-09-25 18:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TipoUkemi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome do ukemi')),
                ('descricao', models.TextField(verbose_name='Descrição da técnica')),
                ('categoria', models.CharField(choices=[('mae', 'Mae Ukemi'), ('ushiro', 'Ushiro Ukemi'), ('yoko', 'Yoko Ukemi'), ('zenpo', 'Zenpo Kaiten Ukemi')], max_length=50, verbose_name='Categoria')),
                ('nivel_dificuldade', models.PositiveIntegerField(default=1, verbose_name='Nível de dificuldade')),
                ('faixa_minima', models.CharField(choices=[('branca', 'Branca'), ('cinza', 'Cinza'), ('azul', 'Azul'), ('amarela', 'Amarela'), ('laranja', 'Laranja'), ('verde', 'Verde'), ('roxa', 'Roxa'), ('marrom', 'Marrom'), ('preta', 'Preta')], default='branca', max_length=10, verbose_name='Faixa mínima')),
                ('video_url', models.URLField(blank=True, null=True, verbose_name='URL do vídeo')),
                ('imagem_demonstracao', models.ImageField(blank=True, null=True, upload_to='ukemis/', verbose_name='Imagem de demonstração')),
                ('ativo', models.BooleanField(default=True, verbose_name='Tipo ativo')),
                ('ordem', models.PositiveIntegerField(default=0, verbose_name='Ordem de exibição')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Tipo de Ukemi',
                'verbose_name_plural': 'Tipos de Ukemi',
                'ordering': ['categoria', 'nivel_dificuldade', 'ordem'],
            },
        ),
        migrations.CreateModel(
            name='SessaoPratica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duracao_minutos', models.PositiveIntegerField(verbose_name='Duração da sessão (minutos)')),
                ('total_repeticoes', models.PositiveIntegerField(verbose_name='Total de repetições')),
                ('repeticoes_sucesso', models.PositiveIntegerField(verbose_name='Repetições com sucesso')),
                ('melhor_tempo', models.PositiveIntegerField(blank=True, null=True, verbose_name='Melhor tempo (segundos)')),
                ('tempo_medio', models.FloatField(blank=True, null=True, verbose_name='Tempo médio (segundos)')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('dificuldades', models.TextField(blank=True, null=True, verbose_name='Dificuldades encontradas')),
                ('melhorias', models.TextField(blank=True, null=True, verbose_name='Melhorias observadas')),
                ('experiencia_ganha', models.PositiveIntegerField(default=0, verbose_name='Experiência ganha')),
                ('pontos_conquistados', models.PositiveIntegerField(default=0, verbose_name='Pontos conquistados')),
                ('data_inicio', models.DateTimeField(verbose_name='Data de início')),
                ('data_fim', models.DateTimeField(verbose_name='Data de fim')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessoes_pratica_ukemi', to=settings.AUTH_USER_MODEL)),
                ('tipo_ukemi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessoes_pratica', to='ukemis.tipoukemi')),
            ],
            options={
                'verbose_name': 'Sessão de Prática de Ukemi',
                'verbose_name_plural': 'Sessões de Prática de Ukemi',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='DesafioUkemi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome do desafio')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('tipo', models.CharField(choices=[('tempo', 'Desafio de Tempo'), ('precisao', 'Desafio de Precisão'), ('resistencia', 'Desafio de Resistência'), ('tecnica', 'Desafio Técnico')], max_length=20, verbose_name='Tipo de desafio')),
                ('dificuldade', models.CharField(choices=[('facil', 'Fácil'), ('medio', 'Médio'), ('dificil', 'Difícil'), ('expert', 'Expert')], max_length=20, verbose_name='Dificuldade')),
                ('objetivo', models.TextField(verbose_name='Objetivo do desafio')),
                ('criterios_sucesso', models.JSONField(default=dict, verbose_name='Critérios de sucesso')),
                ('pontos_experiencia', models.PositiveIntegerField(default=0, verbose_name='Pontos de experiência')),
                ('bonus_pontuacao', models.PositiveIntegerField(default=0, verbose_name='Bônus de pontuação')),
                ('ativo', models.BooleanField(default=True, verbose_name='Desafio ativo')),
                ('disponivel_premium', models.BooleanField(default=False, verbose_name='Disponível apenas para Premium')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_expiracao', models.DateTimeField(blank=True, null=True, verbose_name='Data de expiração')),
                ('tipo_ukemi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='desafios', to='ukemis.tipoukemi')),
            ],
            options={
                'verbose_name': 'Desafio de Ukemi',
                'verbose_name_plural': 'Desafios de Ukemi',
                'ordering': ['dificuldade', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='ConquistaUkemi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pontuacao_final', models.PositiveIntegerField(verbose_name='Pontuação final')),
                ('tempo_realizacao', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tempo de realização (segundos)')),
                ('criterios_atendidos', models.JSONField(default=dict, verbose_name='Critérios atendidos')),
                ('conquistada', models.BooleanField(default=False, verbose_name='Conquista desbloqueada')),
                ('nivel_conquista', models.CharField(blank=True, choices=[('bronze', 'Bronze'), ('prata', 'Prata'), ('ouro', 'Ouro'), ('diamante', 'Diamante')], max_length=20, null=True, verbose_name='Nível da conquista')),
                ('data_tentativa', models.DateTimeField(auto_now_add=True, verbose_name='Data da tentativa')),
                ('data_conquista', models.DateTimeField(blank=True, null=True, verbose_name='Data da conquista')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conquistas_ukemi', to=settings.AUTH_USER_MODEL)),
                ('desafio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conquistas', to='ukemis.desafioukemi')),
            ],
            options={
                'verbose_name': 'Conquista de Ukemi',
                'verbose_name_plural': 'Conquistas de Ukemi',
                'ordering': ['-data_tentativa'],
                'unique_together': {('usuario', 'desafio')},
            },
        ),
        migrations.CreateModel(
            name='ProgressoUkemi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('nao_iniciado', 'Não Iniciado'), ('aprendendo', 'Aprendendo'), ('praticando', 'Praticando'), ('dominado', 'Dominado')], default='nao_iniciado', max_length=20)),
                ('total_tentativas', models.PositiveIntegerField(default=0, verbose_name='Total de tentativas')),
                ('tentativas_sucesso', models.PositiveIntegerField(default=0, verbose_name='Tentativas com sucesso')),
                ('melhor_tempo', models.PositiveIntegerField(blank=True, null=True, verbose_name='Melhor tempo (segundos)')),
                ('pontos_conquistados', models.PositiveIntegerField(default=0, verbose_name='Pontos conquistados')),
                ('experiencia_ganha', models.PositiveIntegerField(default=0, verbose_name='Experiência ganha')),
                ('data_primeira_tentativa', models.DateTimeField(blank=True, null=True, verbose_name='Primeira tentativa')),
                ('data_ultima_tentativa', models.DateTimeField(blank=True, null=True, verbose_name='Última tentativa')),
                ('data_dominio', models.DateTimeField(blank=True, null=True, verbose_name='Data de domínio')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progresso_ukemis', to=settings.AUTH_USER_MODEL)),
                ('tipo_ukemi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progressos', to='ukemis.tipoukemi')),
            ],
            options={
                'verbose_name': 'Progresso de Ukemi',
                'verbose_name_plural': 'Progressos de Ukemi',
                'unique_together': {('usuario', 'tipo_ukemi')},
            },
        ),
    ]
